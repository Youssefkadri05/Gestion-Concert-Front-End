{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_3 = {\n  class: \"col-lg-6\"\n};\nconst _hoisted_4 = {\n  class: \"card\"\n};\nconst _hoisted_5 = {\n  class: \"card-body\"\n};\nconst _hoisted_6 = {\n  class: \"mb-3\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\",\n  class: \"form-label\"\n}, \"Email:\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"mb-3\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\",\n  class: \"form-label\"\n}, \"Password:\", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  key: 0,\n  class: \"alert alert-danger\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" Créer un formulaire pour saisir l'email et le mot de passe \"), _createElementVNode(\"form\", null, [_createElementVNode(\"div\", _hoisted_6, [_createCommentVNode(\" Afficher un label pour l'email \"), _hoisted_7, _createCommentVNode(\" Créer un champ de type email lié à la variable email \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    class: \"form-control\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", _hoisted_8, [_createCommentVNode(\" Afficher un label pour le mot de passe \"), _hoisted_9, _createCommentVNode(\" Créer un champ de type mot de passe lié à la variable password \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createCommentVNode(\" Afficher un message d'erreur si la variable errorMessage est définie \"), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Créer un bouton qui appelle la méthode login au clic \"), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.login && $options.login(...args))\n  }, \"Login\")])])])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createCommentVNode","_hoisted_6","_hoisted_7","type","id","$data","email","$event","required","_hoisted_8","_hoisted_9","password","errorMessage","_hoisted_10","_toDisplayString","onClick","_cache","args","$options","login"],"sources":["C:\\Users\\33625\\Desktop\\M1\\System d'information\\projet\\projetVueJS\\concert\\concert-client\\src\\components\\Connexion\\ConnexionHTTP.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-lg-6\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <!-- Créer un formulaire pour saisir l'email et le mot de passe -->\r\n            <form>\r\n              <div class=\"mb-3\">\r\n                <!-- Afficher un label pour l'email -->\r\n                <label for=\"email\" class=\"form-label\">Email:</label>\r\n                <!-- Créer un champ de type email lié à la variable email -->\r\n                <input type=\"email\" class=\"form-control\" id=\"email\" v-model=\"email\" required>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <!-- Afficher un label pour le mot de passe -->\r\n                <label for=\"password\" class=\"form-label\">Password:</label>\r\n                <!-- Créer un champ de type mot de passe lié à la variable password -->\r\n                <input type=\"password\" class=\"form-control\" id=\"password\" v-model=\"password\" required>\r\n              </div>\r\n              <!-- Afficher un message d'erreur si la variable errorMessage est définie -->\r\n              <div v-if=\"errorMessage\" class=\"alert alert-danger\">{{ errorMessage }}</div>\r\n              <!-- Créer un bouton qui appelle la méthode login au clic -->\r\n              <button type=\"button\" class=\"btn btn-primary\" @click=\"login\">Login</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// Importer la bibliothèque axios pour faire des requêtes HTTP\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // Définir les variables email, password et errorMessage\r\n      email: '',\r\n      password: '',\r\n      errorMessage: ''\r\n    };\r\n  },\r\n  methods: {\r\n    // Définir une méthode asynchrone pour se connecter\r\n    async login() {\r\n      try {\r\n        // Faire une requête POST pour envoyer l'email et le mot de passe au serveur\r\n        const response = await axios.post('http://localhost:8088/test/Admins?operation=login', {\r\n          email: this.email,\r\n          password: this.password\r\n        });\r\n        // Récupérer les données de l'administrateur renvoyées par le serveur\r\n        const admin = response.data;\r\n        // Stocker les données de l'administrateur dans le sessionStorage du navigateur\r\n        sessionStorage.setItem('admin', JSON.stringify(admin));\r\n        // Rediriger l'utilisateur vers la page d'accueil ou une autre page de l'application\r\n        window.location.href = 'http://localhost:8081/';\r\n      } catch (error) {\r\n        // Définir le message d'erreur en cas d'échec de la connexion\r\n        this.errorMessage = 'Identifiant ou mot de passe incorrect.';\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAA4B;;EAChCA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAW;;EAGbA,KAAK,EAAC;AAAM;gCAEfC,mBAAA,CAAoD;EAA7CC,GAAG,EAAC,OAAO;EAACF,KAAK,EAAC;GAAa,QAAM;;EAIzCA,KAAK,EAAC;AAAM;gCAEfC,mBAAA,CAA0D;EAAnDC,GAAG,EAAC,UAAU;EAACF,KAAK,EAAC;GAAa,WAAS;;;EAK3BA,KAAK,EAAC;;;uBApB3CG,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJH,mBAAA,CA0BM,OA1BNI,UA0BM,GAzBJJ,mBAAA,CAwBM,OAxBNK,UAwBM,GAvBJL,mBAAA,CAsBM,OAtBNM,UAsBM,GArBJN,mBAAA,CAoBM,OApBNO,UAoBM,GAnBJC,mBAAA,gEAAmE,EACnER,mBAAA,CAiBO,eAhBLA,mBAAA,CAKM,OALNS,UAKM,GAJJD,mBAAA,oCAAuC,EACvCE,UAAoD,EACpDF,mBAAA,0DAA6D,E,gBAC7DR,mBAAA,CAA6E;IAAtEW,IAAI,EAAC,OAAO;IAACZ,KAAK,EAAC,cAAc;IAACa,EAAE,EAAC,OAAO;+DAAUC,KAAA,CAAAC,KAAK,GAAAC,MAAA;IAAEC,QAAQ,EAAR;iDAAPH,KAAA,CAAAC,KAAK,E,KAEpEd,mBAAA,CAKM,OALNiB,UAKM,GAJJT,mBAAA,4CAA+C,EAC/CU,UAA0D,EAC1DV,mBAAA,oEAAuE,E,gBACvER,mBAAA,CAAsF;IAA/EW,IAAI,EAAC,UAAU;IAACZ,KAAK,EAAC,cAAc;IAACa,EAAE,EAAC,UAAU;+DAAUC,KAAA,CAAAM,QAAQ,GAAAJ,MAAA;IAAEC,QAAQ,EAAR;iDAAVH,KAAA,CAAAM,QAAQ,E,KAE7EX,mBAAA,0EAA6E,EAClEK,KAAA,CAAAO,YAAY,I,cAAvBlB,mBAAA,CAA4E,OAA5EmB,WAA4E,EAAAC,gBAAA,CAArBT,KAAA,CAAAO,YAAY,oB,mCACnEZ,mBAAA,0DAA6D,EAC7DR,mBAAA,CAA2E;IAAnEW,IAAI,EAAC,QAAQ;IAACZ,KAAK,EAAC,iBAAiB;IAAEwB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;KAAE,OAAK,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}