{"ast":null,"code":"// Importer la bibliothèque axios pour faire des requêtes HTTP\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      // Définir les variables email, password et errorMessage\n      email: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    // Définir une méthode asynchrone pour se connecter\n    async login() {\n      try {\n        // Faire une requête POST pour envoyer l'email et le mot de passe au serveur\n        const response = await axios.post('http://localhost:8088/test/Admins?operation=login', {\n          email: this.email,\n          password: this.password\n        });\n        // Récupérer les données de l'administrateur renvoyées par le serveur\n        const admin = response.data;\n        // Stocker les données de l'administrateur dans le sessionStorage du navigateur\n        sessionStorage.setItem('admin', JSON.stringify(admin));\n        // Rediriger l'utilisateur vers la page d'accueil ou une autre page de l'application\n        window.location.href = 'http://localhost:8081/';\n      } catch (error) {\n        // Définir le message d'erreur en cas d'échec de la connexion\n        this.errorMessage = 'Identifiant ou mot de passe incorrect.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","email","password","errorMessage","methods","login","response","post","admin","sessionStorage","setItem","JSON","stringify","window","location","href","error"],"sources":["C:\\Users\\33625\\Desktop\\M1\\System d'information\\projet\\projetVueJS\\concert\\concert-client\\src\\components\\Connexion\\ConnexionHTTP.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-lg-6\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <!-- Créer un formulaire pour saisir l'email et le mot de passe -->\r\n            <form>\r\n              <div class=\"mb-3\">\r\n                <!-- Afficher un label pour l'email -->\r\n                <label for=\"email\" class=\"form-label\">Email:</label>\r\n                <!-- Créer un champ de type email lié à la variable email -->\r\n                <input type=\"email\" class=\"form-control\" id=\"email\" v-model=\"email\" required>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <!-- Afficher un label pour le mot de passe -->\r\n                <label for=\"password\" class=\"form-label\">Password:</label>\r\n                <!-- Créer un champ de type mot de passe lié à la variable password -->\r\n                <input type=\"password\" class=\"form-control\" id=\"password\" v-model=\"password\" required>\r\n              </div>\r\n              <!-- Afficher un message d'erreur si la variable errorMessage est définie -->\r\n              <div v-if=\"errorMessage\" class=\"alert alert-danger\">{{ errorMessage }}</div>\r\n              <!-- Créer un bouton qui appelle la méthode login au clic -->\r\n              <button type=\"button\" class=\"btn btn-primary\" @click=\"login\">Login</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// Importer la bibliothèque axios pour faire des requêtes HTTP\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // Définir les variables email, password et errorMessage\r\n      email: '',\r\n      password: '',\r\n      errorMessage: ''\r\n    };\r\n  },\r\n  methods: {\r\n    // Définir une méthode asynchrone pour se connecter\r\n    async login() {\r\n      try {\r\n        // Faire une requête POST pour envoyer l'email et le mot de passe au serveur\r\n        const response = await axios.post('http://localhost:8088/test/Admins?operation=login', {\r\n          email: this.email,\r\n          password: this.password\r\n        });\r\n        // Récupérer les données de l'administrateur renvoyées par le serveur\r\n        const admin = response.data;\r\n        // Stocker les données de l'administrateur dans le sessionStorage du navigateur\r\n        sessionStorage.setItem('admin', JSON.stringify(admin));\r\n        // Rediriger l'utilisateur vers la page d'accueil ou une autre page de l'application\r\n        window.location.href = 'http://localhost:8081/';\r\n      } catch (error) {\r\n        // Définir le message d'erreur en cas d'échec de la connexion\r\n        this.errorMessage = 'Identifiant ou mot de passe incorrect.';\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":"AAiCA;AACA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,IAAI,CAAC,mDAAmD,EAAE;UACrFN,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACF;QACA,MAAMM,KAAI,GAAIF,QAAQ,CAACN,IAAI;QAC3B;QACAS,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC,CAAC;QACtD;QACAK,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAI,wBAAwB;MACjD,EAAE,OAAOC,KAAK,EAAE;QACd;QACA,IAAI,CAACb,YAAW,GAAI,wCAAwC;MAC9D;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}