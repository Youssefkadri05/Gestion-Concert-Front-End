{"ast":null,"code":"export default {\n  data() {\n    return {\n      loading: false,\n      concerts: []\n    };\n  },\n  mounted() {\n    this.getConcertData();\n  },\n  methods: {\n    getConcertData() {\n      return fetch(`http://localhost:8080/concert/}`).then(response => response.json()).then(data => {\n        this.loading = true;\n        this.concerts = data;\n        const date_debut = this.concerts.con_date_heure_debut;\n        const date_fin = this.concerts.con_date_heure_fin;\n        this.pastConcerts(date_fin);\n        this.currentConcerts(date_debut, date_fin);\n      }).catch(error => console.error(error));\n    },\n    pastConcerts(date_fin) {\n      const today = new Date();\n      return this.concerts.filter(concert => new Date(date_fin) < today);\n    },\n    currentConcerts(date_debut, date_fin) {\n      const today = new Date();\n      return this.concerts.filter(concert => new Date(date_debut) <= today && new Date(date_fin) >= today);\n    },\n    upcomingConcerts() {\n      const today = new Date();\n      return this.concerts.filter(concert => new Date(concert.startDate) > today);\n    }\n  }\n};","map":{"version":3,"names":["data","loading","concerts","mounted","getConcertData","methods","fetch","then","response","json","date_debut","con_date_heure_debut","date_fin","con_date_heure_fin","pastConcerts","currentConcerts","catch","error","console","today","Date","filter","concert","upcomingConcerts","startDate"],"sources":["C:\\Users\\33625\\Desktop\\M1\\System d'information\\projet\\projetVueJS\\concert\\concert-client\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"about\">\n    <h1 class=\"text-center\">Liste des concerts</h1>\n\n    <!-- Concerts passés -->\n    <div class=\"card bg-secondary fw-bold text-white text-center\">\n      <div class=\"card-body\">Concerts passés</div>\n      <ul>\n        <li v-for=\"concert in pastConcerts\" :key=\"concert.id\">{{ concert.title }}</li>\n      </ul>\n    </div>\n\n    <!-- Concerts en cours -->\n    <div class=\"card bg-success fw-bold text-white text-center\">\n      <div class=\"card-body\">Concerts en cours</div>\n      <ul>\n        <li v-for=\"concert in currentConcerts\" :key=\"concert.id\">{{ concert.title }}</li>\n      </ul>\n    </div>\n\n    <!-- Concerts à venir -->\n    <div class=\"card bg-primary fw-bold text-white text-center\">\n      <div class=\"card-body\">Concerts à venir</div>\n      <ul>\n        <li v-for=\"concert in upcomingConcerts\" :key=\"concert.id\">{{ concert.title }}</li>\n      </ul>\n    </div>\n\n  </div>\n</template>\n\n<script>\n\nexport default {\n\n  data() {\n    return {\n      loading: false,\n      concerts: [],\n    };\n  },\n  mounted() {\n\n    this.getConcertData();\n  },\n  methods: {\n    getConcertData() {\n      return fetch(`http://localhost:8080/concert/}`)\n        .then(response => response.json())\n        .then(data => {\n          this.loading = true;\n          this.concerts = data;\n          const date_debut = this.concerts.con_date_heure_debut;\n          const date_fin = this.concerts.con_date_heure_fin;\n          this.pastConcerts(date_fin);\n          this.currentConcerts(date_debut,date_fin)\n        })\n        .catch(error => console.error(error));\n    },\n    pastConcerts(date_fin) {\n      const today = new Date();\n      return this.concerts.filter(concert => new Date(date_fin) < today);\n    },\n    currentConcerts(date_debut,date_fin) {\n      const today = new Date();\n      return this.concerts.filter(concert => new Date(date_debut) <= today && new Date(date_fin) >= today);\n    },\n    upcomingConcerts() {\n      const today = new Date();\n      return this.concerts.filter(concert => new Date(concert.startDate) > today);\n    }\n  }\n};\n</script>\n"],"mappings":"AAiCA,eAAe;EAEbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,KAAK;MACdC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IAER,IAAI,CAACC,cAAc,EAAE;EACvB,CAAC;EACDC,OAAO,EAAE;IACPD,cAAcA,CAAA,EAAG;MACf,OAAOE,KAAK,CAAE,iCAAgC,EAC3CC,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,EAAE,EAChCF,IAAI,CAACP,IAAG,IAAK;QACZ,IAAI,CAACC,OAAM,GAAI,IAAI;QACnB,IAAI,CAACC,QAAO,GAAIF,IAAI;QACpB,MAAMU,UAAS,GAAI,IAAI,CAACR,QAAQ,CAACS,oBAAoB;QACrD,MAAMC,QAAO,GAAI,IAAI,CAACV,QAAQ,CAACW,kBAAkB;QACjD,IAAI,CAACC,YAAY,CAACF,QAAQ,CAAC;QAC3B,IAAI,CAACG,eAAe,CAACL,UAAU,EAACE,QAAQ;MAC1C,CAAC,EACAI,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;IACzC,CAAC;IACDH,YAAYA,CAACF,QAAQ,EAAE;MACrB,MAAMO,KAAI,GAAI,IAAIC,IAAI,EAAE;MACxB,OAAO,IAAI,CAAClB,QAAQ,CAACmB,MAAM,CAACC,OAAM,IAAK,IAAIF,IAAI,CAACR,QAAQ,IAAIO,KAAK,CAAC;IACpE,CAAC;IACDJ,eAAeA,CAACL,UAAU,EAACE,QAAQ,EAAE;MACnC,MAAMO,KAAI,GAAI,IAAIC,IAAI,EAAE;MACxB,OAAO,IAAI,CAAClB,QAAQ,CAACmB,MAAM,CAACC,OAAM,IAAK,IAAIF,IAAI,CAACV,UAAU,KAAKS,KAAI,IAAK,IAAIC,IAAI,CAACR,QAAQ,KAAKO,KAAK,CAAC;IACtG,CAAC;IACDI,gBAAgBA,CAAA,EAAG;MACjB,MAAMJ,KAAI,GAAI,IAAIC,IAAI,EAAE;MACxB,OAAO,IAAI,CAAClB,QAAQ,CAACmB,MAAM,CAACC,OAAM,IAAK,IAAIF,IAAI,CAACE,OAAO,CAACE,SAAS,IAAIL,KAAK,CAAC;IAC7E;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}