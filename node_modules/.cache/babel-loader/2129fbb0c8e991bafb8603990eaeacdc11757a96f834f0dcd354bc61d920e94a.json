{"ast":null,"code":"import L from 'leaflet';\nimport { $route } from '../router/index.js';\nexport default {\n  data() {\n    return {\n      loading: false,\n      salle: {}\n    };\n  },\n  mounted() {\n    const address = \"14 rue borda, brest France\";\n    const id_salle = $route.params.id;\n    console.log(\"ttttttttttttttttttttttttttttttt\" + id_salle);\n    this.getSalleData(id_salle);\n    this.getMapData(address);\n  },\n  methods: {\n    getSalleData(id_salle) {\n      fetch(`http://localhost:8080/salle/${id_salle}`).then(response => response.json()).then(data => {\n        this.loading = true;\n        this.salle = data;\n      }).catch(error => console.error(error));\n    },\n    getMapData(address) {\n      const url = `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(address)}&format=json&limit=1`;\n      fetch(url).then(response => response.json()).then(data => {\n        const lat = data[0].lat;\n        const lon = data[0].lon;\n        const map = L.map('map').setView([lat, lon], 13);\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors',\n          maxZoom: 18\n        }).addTo(map);\n        L.marker([lat, lon]).addTo(map);\n      }).catch(error => console.log(error));\n    }\n  }\n};","map":{"version":3,"names":["L","$route","data","loading","salle","mounted","address","id_salle","params","id","console","log","getSalleData","getMapData","methods","fetch","then","response","json","catch","error","url","encodeURIComponent","lat","lon","map","setView","tileLayer","attribution","maxZoom","addTo","marker"],"sources":["C:\\Users\\33625\\Desktop\\M1\\System d'information\\projet\\projetVueJS\\concert\\concert-client\\src\\components\\SalleDetails.vue"],"sourcesContent":["<template>\r\n    \r\n  <div class=\"about\">\r\n  <h1 class=\"text-center\">Liste des concerts organisés dans la salles</h1>\r\n  <div class=\"card bg-secondary fw-bold text-white text-center\">\r\n    <div class=\"card-body\">Concerts passées</div>\r\n  </div>\r\n  <div class=\"card bg-success fw-bold text-white text-center\">\r\n    <div class=\"card-body\">Concerts en cours</div>\r\n  </div>\r\n  <div class=\"card bg-primary fw-bold text-white text-center\">\r\n    <div class=\"card-body\">Concerts à venir</div>\r\n  </div>\r\n</div>\r\n  <div id=\"infoSalle\">\r\n    <h1 class=\"display-6\">Salle        :  {{ salle.sal_nom }}</h1> \r\n    <h1 class=\"display-6\">Addresse     :  {{ salle.sal_adresse }} </h1>\r\n    <h1 class=\"display-6\">Capacité     :  {{ salle.sal_capacite }}</h1>\r\n    <h1 class=\"display-6\">Gestionnaire :  {{ salle.sal_nom_gestionnaire }}</h1>\r\n  </div>\r\n  <div id=\"map\"></div>\r\n</template>\r\n\r\n<script>\r\nimport L from 'leaflet';\r\nimport { $route } from '../router/index.js';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      salle: {},\r\n    };\r\n  },\r\n  mounted() {\r\n    const address = \"14 rue borda, brest France\";\r\n    const id_salle = $route.params.id; \r\n    console.log(\"ttttttttttttttttttttttttttttttt\" + id_salle);\r\n    this.getSalleData(id_salle);\r\n    this.getMapData(address);\r\n  },\r\n  methods: {\r\n    getSalleData(id_salle) {\r\n      fetch(`http://localhost:8080/salle/${id_salle}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          this.loading = true;\r\n          this.salle = data;\r\n        })\r\n        .catch(error => console.error(error));\r\n    },\r\n    getMapData(address) {\r\n      const url = `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(address)}&format=json&limit=1`;\r\n      fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          const lat = data[0].lat;\r\n          const lon = data[0].lon;\r\n\r\n          const map = L.map('map').setView([lat, lon], 13);\r\n          L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors',\r\n            maxZoom: 18,\r\n          }).addTo(map);\r\n          L.marker([lat, lon]).addTo(map);\r\n        })\r\n        .catch(error => console.log(error));\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#map {\r\n  height: 400px;\r\n  width: 50%;\r\n  float: right;\r\n}\r\n#infoSalle {\r\n  float: left;\r\n}\r\n</style>\r\n"],"mappings":"AAwBA,OAAOA,CAAA,MAAO,SAAS;AACvB,SAASC,MAAK,QAAS,oBAAoB;AAE3C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,CAAC;IACV,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,OAAM,GAAI,4BAA4B;IAC5C,MAAMC,QAAO,GAAIN,MAAM,CAACO,MAAM,CAACC,EAAE;IACjCC,OAAO,CAACC,GAAG,CAAC,iCAAgC,GAAIJ,QAAQ,CAAC;IACzD,IAAI,CAACK,YAAY,CAACL,QAAQ,CAAC;IAC3B,IAAI,CAACM,UAAU,CAACP,OAAO,CAAC;EAC1B,CAAC;EACDQ,OAAO,EAAE;IACPF,YAAYA,CAACL,QAAQ,EAAE;MACrBQ,KAAK,CAAE,+BAA8BR,QAAS,EAAC,EAC5CS,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,EAAE,EAChCF,IAAI,CAACd,IAAG,IAAK;QACZ,IAAI,CAACC,OAAM,GAAI,IAAI;QACnB,IAAI,CAACC,KAAI,GAAIF,IAAI;MACnB,CAAC,EACAiB,KAAK,CAACC,KAAI,IAAKV,OAAO,CAACU,KAAK,CAACA,KAAK,CAAC,CAAC;IACzC,CAAC;IACDP,UAAUA,CAACP,OAAO,EAAE;MAClB,MAAMe,GAAE,GAAK,gDAA+CC,kBAAkB,CAAChB,OAAO,CAAE,sBAAqB;MAC7GS,KAAK,CAACM,GAAG,EACNL,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,EAAE,EAChCF,IAAI,CAACd,IAAG,IAAK;QACZ,MAAMqB,GAAE,GAAIrB,IAAI,CAAC,CAAC,CAAC,CAACqB,GAAG;QACvB,MAAMC,GAAE,GAAItB,IAAI,CAAC,CAAC,CAAC,CAACsB,GAAG;QAEvB,MAAMC,GAAE,GAAIzB,CAAC,CAACyB,GAAG,CAAC,KAAK,CAAC,CAACC,OAAO,CAAC,CAACH,GAAG,EAAEC,GAAG,CAAC,EAAE,EAAE,CAAC;QAChDxB,CAAC,CAAC2B,SAAS,CAAC,oDAAoD,EAAE;UAChEC,WAAW,EAAE,gFAAgF;UAC7FC,OAAO,EAAE;QACX,CAAC,CAAC,CAACC,KAAK,CAACL,GAAG,CAAC;QACbzB,CAAC,CAAC+B,MAAM,CAAC,CAACR,GAAG,EAAEC,GAAG,CAAC,CAAC,CAACM,KAAK,CAACL,GAAG,CAAC;MACjC,CAAC,EACAN,KAAK,CAACC,KAAI,IAAKV,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC,CAAC;IACvC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}