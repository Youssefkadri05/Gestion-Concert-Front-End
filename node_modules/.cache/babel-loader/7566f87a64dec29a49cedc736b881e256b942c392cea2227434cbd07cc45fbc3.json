{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"list-group\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center\"\n}, \"Listes des artistes\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Création d'un composant de liste avec le framework Vue.js \"), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" Ajout d'un titre centré à la liste \"), _hoisted_2, _createCommentVNode(\" Boucle pour afficher chaque artiste de la liste avec un lien vers sa page de concerts \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.artistes, artiste => {\n    return _openBlock(), _createBlock(_component_router_link, {\n      to: {\n        name: 'ConcertListeForArtiste',\n        params: {\n          id: artiste.art_id\n        }\n      },\n      type: \"button\",\n      class: \"list-group-item list-group-item-action align-middle\",\n      key: artiste.art_id\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(artiste.art_nom + \" \" + artiste.art_prenom), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Ajout d'un bouton pour ajouter un nouvel artiste \"), _createVNode(_component_router_link, {\n    class: \"btn btn-primary\",\n    to: \"/CreateArtiste\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Ajouter un artiste\")]),\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createCommentVNode","_hoisted_1","_hoisted_2","_createElementBlock","_Fragment","_renderList","$data","artistes","artiste","_createBlock","_component_router_link","to","name","params","id","art_id","type","key","art_nom","art_prenom","_createVNode"],"sources":["C:\\Users\\33625\\Desktop\\M1\\System d'information\\projet\\projetVueJS\\concert\\concert-client\\src\\components\\Artiste\\ArtisteGestion.vue"],"sourcesContent":["<template>\r\n  <!-- Création d'un composant de liste avec le framework Vue.js -->\r\n  <div class=\"list-group\">\r\n    <!-- Ajout d'un titre centré à la liste -->\r\n    <h1 class=\"text-center\">Listes des artistes</h1>\r\n    <!-- Boucle pour afficher chaque artiste de la liste avec un lien vers sa page de concerts -->\r\n    <router-link :to=\"{ name: 'ConcertListeForArtiste', params: { id: artiste.art_id } }\" type=\"button\" class=\"list-group-item list-group-item-action align-middle\" v-for=\"artiste in artistes\" :key=\"artiste.art_id\">{{ artiste.art_nom +\" \"+artiste.art_prenom }}</router-link>\r\n  </div>\r\n  <!-- Ajout d'un bouton pour ajouter un nouvel artiste -->\r\n  <router-link class=\"btn btn-primary\" to=\"/CreateArtiste\">Ajouter un artiste</router-link>\r\n</template>\r\n  \r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // Création d'une propriété artistes pour stocker la liste des artistes\r\n      artistes: []\r\n    }\r\n  },\r\n  mounted() {\r\n    // Utilisation de l'API Fetch pour récupérer la liste des artistes à partir de l'adresse http://localhost:8080/artiste\r\n    fetch('http://localhost:8080/artiste')\r\n      .then(response => response.json()) // Conversion de la réponse en format JSON\r\n      .then(data => {\r\n        this.artistes = data; // Affectation des données JSON récupérées à la propriété artistes\r\n      })\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;EAEOA,KAAK,EAAC;AAAY;gCAErBC,mBAAA,CAAgD;EAA5CD,KAAK,EAAC;AAAa,GAAC,qBAAmB;;;;6DAH7CE,mBAAA,+DAAkE,EAClED,mBAAA,CAKM,OALNE,UAKM,GAJJD,mBAAA,wCAA2C,EAC3CE,UAAgD,EAChDF,mBAAA,2FAA8F,G,kBAC9FG,mBAAA,CAA6QC,SAAA,QAAAC,WAAA,CAA3FC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAA9KC,YAAA,CAA6QC,sBAAA;MAA/PC,EAAE;QAAAC,IAAA;QAAAC,MAAA;UAAAC,EAAA,EAAkDN,OAAO,CAACO;QAAM;MAAA;MAAMC,IAAI,EAAC,QAAQ;MAAClB,KAAK,EAAC,qDAAqD;MAA8BmB,GAAG,EAAET,OAAO,CAACO;;wBAAQ,MAA6C,C,kCAA1CP,OAAO,CAACU,OAAO,SAAMV,OAAO,CAACW,UAAU,iB;;;;oCAE9PnB,mBAAA,sDAAyD,EACzDoB,YAAA,CAAyFV,sBAAA;IAA5EZ,KAAK,EAAC,iBAAiB;IAACa,EAAE,EAAC;;sBAAiB,MAAkB,C,iBAAlB,oBAAkB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}