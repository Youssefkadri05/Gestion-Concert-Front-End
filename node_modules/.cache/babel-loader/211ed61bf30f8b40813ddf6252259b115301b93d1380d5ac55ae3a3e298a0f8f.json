{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<table class=\\\"table table-striped\\\"><thead><tr><th scope=\\\"col\\\">#</th><th scope=\\\"col\\\">First</th><th scope=\\\"col\\\">Last</th><th scope=\\\"col\\\">Handle</th></tr></thead><tbody><tr><th scope=\\\"row\\\">1</th><td>Mark</td><td>Otto</td><td>@mdo</td></tr></tbody></table>\", 1);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Liste des utilisateurs de GitHub\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", null, [_hoisted_2, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, user => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: user.id\n    }, _toDisplayString(user.login), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","_hoisted_2","_createElementBlock","_Fragment","_renderList","$data","users","user","key","id","login"],"sources":["C:\\Users\\33625\\Desktop\\M1\\System d'information\\projet\\projetVueJS\\concert\\src\\views\\ArtisteGestion.vue"],"sourcesContent":["<template>\r\n    \r\n    \r\n    \r\n    \r\n    <table class=\"table table-striped\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">#</th>\r\n      <th scope=\"col\">First</th>\r\n      <th scope=\"col\">Last</th>\r\n      <th scope=\"col\">Handle</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <th scope=\"row\">1</th>\r\n      <td>Mark</td>\r\n      <td>Otto</td>\r\n      <td>@mdo</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n    \r\n    \r\n    <div>\r\n      <h2>Liste des utilisateurs de GitHub</h2>\r\n      <ul>\r\n        <li v-for=\"user in users\" :key=\"user.id\">{{ user.login }}</li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        users: []\r\n      }\r\n    },\r\n    mounted() {\r\n      // Appel de l'API pour récupérer la liste des utilisateurs de GitHub\r\n      fetch('https://api.github.com/users')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          // Stockage des données dans le modèle du composant\r\n          this.users = data;\r\n        })\r\n    }\r\n  }\r\n  </script>\r\n  "],"mappings":";;gCA0BMA,mBAAA,CAAyC,YAArC,kCAAgC;;;6DArBtCC,UAiBI,EAGJD,mBAAA,CAKM,cAJJE,UAAyC,EACzCF,mBAAA,CAEK,c,kBADHG,mBAAA,CAA8DC,SAAA,QAAAC,WAAA,CAA3CC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfL,mBAAA,CAA8D;MAAnCM,GAAG,EAAED,IAAI,CAACE;wBAAOF,IAAI,CAACG,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}