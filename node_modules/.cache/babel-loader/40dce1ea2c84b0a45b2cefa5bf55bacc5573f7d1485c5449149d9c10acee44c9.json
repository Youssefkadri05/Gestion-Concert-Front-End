{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"about\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center\"\n}, \"Liste des concerts\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card bg-secondary fw-bold text-white text-center\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-body\"\n}, \"Concerts passés\")], -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card bg-success fw-bold text-white text-center\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-body\"\n}, \"Concerts en cours\")], -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card bg-primary fw-bold text-white text-center\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-body\"\n}, \"Concerts à venir\")], -1 /* HOISTED */);\nconst _hoisted_6 = {\n  id: \"infoSalle\"\n};\nconst _hoisted_7 = {\n  class: \"display-6\"\n};\nconst _hoisted_8 = {\n  class: \"display-6\"\n};\nconst _hoisted_9 = {\n  class: \"display-6\"\n};\nconst _hoisted_10 = {\n  class: \"display-6\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Vue du composant \\\"About\\\" \"), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" Titre de la page \"), _hoisted_2, _createCommentVNode(\" Carte \\\"Concerts passés\\\" \"), _hoisted_3, _createCommentVNode(\" Liste des concerts passés \"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.pastConcerts, concert => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: concert.id\n    }, [_createVNode(_component_router_link, {\n      class: \"salleLink\",\n      to: {\n        name: 'ConcertDetails',\n        params: {\n          id: concert.con_id\n        }\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(concert.con_nom), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Carte \\\"Concerts en cours\\\" \"), _hoisted_4, _createCommentVNode(\" Liste des concerts en cours \"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.currentConcerts, concert => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: concert.id\n    }, [_createVNode(_component_router_link, {\n      class: \"salleLink\",\n      to: {\n        name: 'ConcertDetails',\n        params: {\n          id: concert.con_id\n        }\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(concert.con_nom), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Carte \\\"Concerts à venir\\\" \"), _hoisted_5, _createCommentVNode(\" Liste des concerts à venir \"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.upcomingConcerts, concert => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: concert.id\n    }, [_createVNode(_component_router_link, {\n      class: \"salleLink\",\n      to: {\n        name: 'ConcertDetails',\n        params: {\n          id: concert.con_id\n        }\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(concert.con_nom), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Affichage des informations sur la salle \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h1\", _hoisted_7, \"Salle : \" + _toDisplayString($data.salle.sal_nom), 1 /* TEXT */), _createElementVNode(\"h1\", _hoisted_8, \"Addresse : \" + _toDisplayString($data.salle.sal_adresse), 1 /* TEXT */), _createElementVNode(\"h1\", _hoisted_9, \"Capacité : \" + _toDisplayString($data.salle.sal_capacite), 1 /* TEXT */), _createElementVNode(\"h1\", _hoisted_10, \"Gestionnaire : \" + _toDisplayString($data.salle.sal_nom_gestionnaire), 1 /* TEXT */)]), _createCommentVNode(\" Affichage de la carte OpenStreetMap \"), _hoisted_11], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","id","_createCommentVNode","_hoisted_1","_hoisted_2","_hoisted_3","_createElementBlock","_Fragment","_renderList","$data","pastConcerts","concert","key","_createVNode","_component_router_link","to","name","params","con_id","con_nom","_hoisted_4","currentConcerts","_hoisted_5","upcomingConcerts","_hoisted_6","_hoisted_7","_toDisplayString","salle","sal_nom","_hoisted_8","sal_adresse","_hoisted_9","sal_capacite","_hoisted_10","sal_nom_gestionnaire","_hoisted_11"],"sources":["C:\\Users\\33625\\Desktop\\M1\\System d'information\\projet\\projetVueJS\\concert\\concert-client\\src\\components\\Salle\\SalleDetails.vue"],"sourcesContent":["<template>\r\n  <!-- Vue du composant \"About\" -->\r\n  <div class=\"about\">\r\n    <!-- Titre de la page -->\r\n    <h1 class=\"text-center\">Liste des concerts</h1>\r\n\r\n    <!-- Carte \"Concerts passés\" -->\r\n    <div class=\"card bg-secondary fw-bold text-white text-center\">\r\n      <div class=\"card-body\">Concerts passés</div>\r\n    </div>\r\n\r\n    <!-- Liste des concerts passés -->\r\n    <ul>\r\n      <li v-for=\"concert in pastConcerts\" :key=\"concert.id\">\r\n        <router-link class=\"salleLink\" :to=\"{ name: 'ConcertDetails', params: { id: concert.con_id } }\">\r\n          {{ concert.con_nom }}\r\n        </router-link>\r\n      </li>\r\n    </ul>\r\n\r\n    <!-- Carte \"Concerts en cours\" -->\r\n    <div class=\"card bg-success fw-bold text-white text-center\">\r\n      <div class=\"card-body\">Concerts en cours</div>\r\n    </div>\r\n\r\n    <!-- Liste des concerts en cours -->\r\n    <ul>\r\n      <li v-for=\"concert in currentConcerts\" :key=\"concert.id\">\r\n        <router-link class=\"salleLink\" :to=\"{ name: 'ConcertDetails', params: { id: concert.con_id } }\">\r\n          {{ concert.con_nom }}\r\n        </router-link>\r\n      </li>\r\n    </ul>\r\n\r\n    <!-- Carte \"Concerts à venir\" -->\r\n    <div class=\"card bg-primary fw-bold text-white text-center\">\r\n      <div class=\"card-body\">Concerts à venir</div>\r\n    </div>\r\n\r\n    <!-- Liste des concerts à venir -->\r\n    <ul>\r\n      <li v-for=\"concert in upcomingConcerts\" :key=\"concert.id\">\r\n        <router-link class=\"salleLink\" :to=\"{ name: 'ConcertDetails', params: { id: concert.con_id } }\">\r\n          {{ concert.con_nom }}\r\n        </router-link>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <!-- Affichage des informations sur la salle -->\r\n  <div id=\"infoSalle\">\r\n    <h1 class=\"display-6\">Salle        :  {{ salle.sal_nom }}</h1>\r\n    <h1 class=\"display-6\">Addresse     :  {{ salle.sal_adresse }} </h1>\r\n    <h1 class=\"display-6\">Capacité     :  {{ salle.sal_capacite }}</h1>\r\n    <h1 class=\"display-6\">Gestionnaire :  {{ salle.sal_nom_gestionnaire }}</h1>\r\n  </div>\r\n\r\n  <!-- Affichage de la carte OpenStreetMap -->\r\n  <div id=\"map\"></div>\r\n</template>\r\n\r\n<script>\r\nimport L from 'leaflet'; // Importation de la bibliothèque Leaflet pour créer la carte OpenStreetMap\r\nimport axios from 'axios'; // Importation de la bibliothèque Axios pour effectuer des requêtes HTTP\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false, // Indicateur pour savoir si les données de la salle ont été chargées\r\n      salle: {}, // Les données de la salle récupérées depuis l'API\r\n      id_salle: this.$route.params.id, // ID de la salle passée en paramètre de l'URL\r\n      pastConcerts: [], // Liste des concerts passés\r\n      currentConcerts: [], // Liste des concerts en cours\r\n      upcomingConcerts: [], // Liste des concerts à venir\r\n    };\r\n  },\r\n  created() {\r\n    axios.get(`http://localhost:8080/salle/salles/${this.id_salle}/concerts`)\r\n      .then(response => {\r\n        const concerts = response.data;\r\n        const now = Date.now();\r\n\r\n        this.pastConcerts = concerts.filter(concert => new Date(concert.con_date_heure_fin) < now);\r\n        this.currentConcerts = concerts.filter(concert => new Date(concert.con_date_heure_fin) >= now && new Date(concert.con_date_heure_debut) <= now);\r\n        this.upcomingConcerts = concerts.filter(concert => new Date(concert.con_date_heure_debut) > now);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  },\r\n  mounted() {\r\n   \r\n    this.getSalleData(this.id_salle);\r\n  },\r\n  methods: {\r\n    getSalleData(id_salle) {\r\n      fetch(`http://localhost:8080/salle/${id_salle}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          this.loading = true;\r\n          this.salle = data;\r\n          const address = this.salle.sal_adresse;\r\n          this.getMapData(address);\r\n        })\r\n        .catch(error => console.error(error));\r\n    },\r\n    getMapData(address) {\r\n      const url = `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(address)}&format=json&limit=1`;\r\n      fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          const lat = data[0].lat;\r\n          const lon = data[0].lon;\r\n\r\n          const map = L.map('map').setView([lat, lon], 13);\r\n          L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors',\r\n            maxZoom: 18,\r\n          }).addTo(map);\r\n          L.marker([lat, lon]).addTo(map);\r\n        })\r\n        .catch(error => console.log(error));\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#map {\r\n  height: 400px;\r\n  width: 50%;\r\n  float: right;\r\n}\r\n#infoSalle {\r\n  float: left;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}