{"ast":null,"code":"import L from 'leaflet';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      loading: false,\n      salle: {},\n      id_salle: this.$route.params.id,\n      pastConcerts: [],\n      currentConcerts: [],\n      upcomingConcerts: []\n    };\n  },\n  created() {\n    axios.get(`http://localhost:8080/salle/salles/${this.id_salle}/concerts`).then(response => {\n      const concerts = response.data;\n      const now = Date.now();\n      this.pastConcerts = concerts.filter(concert => new Date(concert.con_date_heure_fin) < now);\n      this.currentConcerts = concerts.filter(concert => new Date(concert.con_date_heure_fin) >= now && new Date(concert.con_date_heure_debut) <= now);\n      this.upcomingConcerts = concerts.filter(concert => new Date(concert.con_date_heure_debut) > now);\n    }).catch(error => {\n      console.error(error);\n    });\n  },\n  mounted() {\n    this.getSalleData(this.id_salle);\n  },\n  methods: {\n    getSalleData(id_salle) {\n      fetch(`http://localhost:8080/salle/${id_salle}`).then(response => response.json()).then(data => {\n        this.loading = true;\n        this.salle = data;\n        const address = this.salle.sal_adresse;\n        this.getMapData(address);\n      }).catch(error => console.error(error));\n    },\n    getMapData(address) {\n      const url = `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(address)}&format=json&limit=1`;\n      fetch(url).then(response => response.json()).then(data => {\n        const lat = data[0].lat;\n        const lon = data[0].lon;\n        const map = L.map('map').setView([lat, lon], 13);\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors',\n          maxZoom: 18\n        }).addTo(map);\n        L.marker([lat, lon]).addTo(map);\n      }).catch(error => console.log(error));\n    }\n  }\n};","map":{"version":3,"names":["L","axios","data","loading","salle","id_salle","$route","params","id","pastConcerts","currentConcerts","upcomingConcerts","created","get","then","response","concerts","now","Date","filter","concert","con_date_heure_fin","con_date_heure_debut","catch","error","console","mounted","getSalleData","methods","fetch","json","address","sal_adresse","getMapData","url","encodeURIComponent","lat","lon","map","setView","tileLayer","attribution","maxZoom","addTo","marker","log"],"sources":["C:\\Users\\33625\\Desktop\\M1\\System d'information\\projet\\projetVueJS\\concert\\concert-client\\src\\components\\Salle\\SalleDetails.vue"],"sourcesContent":["<template>\r\n    \r\n    <div class=\"about\">\r\n    <h1 class=\"text-center\">Liste des concerts</h1>\r\n    <div class=\"card bg-secondary fw-bold text-white text-center\">\r\n      <div class=\"card-body\">Concerts passés</div>\r\n\r\n    </div>\r\n    <ul>\r\n     \r\n      <li v-for=\"concert in pastConcerts\" :key=\"concert.id\">\r\n      <router-link class=\"salleLink\" :to=\"{ name: 'ConcertDetails', params: { id: concert.con_id } }\">\r\n        {{ concert.con_nom }}\r\n      </router-link>\r\n      </li>\r\n    </ul>\r\n    <div class=\"card bg-success fw-bold text-white text-center\">\r\n      <div class=\"card-body\">Concerts en cours</div>\r\n\r\n    </div>\r\n    <ul>\r\n     \r\n      <li v-for=\"concert in currentConcerts\" :key=\"concert.id\">\r\n      <router-link class=\"salleLink\" :to=\"{ name: 'ConcertDetails', params: { id: concert.con_id } }\">\r\n        {{ concert.con_nom }}\r\n      </router-link>\r\n      </li>\r\n    </ul>\r\n    <div class=\"card bg-primary fw-bold text-white text-center\">\r\n      <div class=\"card-body\">Concerts à venir</div>\r\n\r\n    </div>\r\n    <ul>\r\n      <li v-for=\"concert in upcomingConcerts\" :key=\"concert.id\">\r\n      <router-link class=\"salleLink\" :to=\"{ name: 'ConcertDetails', params: { id: concert.con_id } }\">\r\n        {{ concert.con_nom }}\r\n      </router-link>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div id=\"infoSalle\">\r\n    <h1 class=\"display-6\">Salle        :  {{ salle.sal_nom }}</h1> \r\n    <h1 class=\"display-6\">Addresse     :  {{ salle.sal_adresse }} </h1>\r\n    <h1 class=\"display-6\">Capacité     :  {{ salle.sal_capacite }}</h1>\r\n    <h1 class=\"display-6\">Gestionnaire :  {{ salle.sal_nom_gestionnaire }}</h1>\r\n  </div>\r\n  <div id=\"map\"></div>\r\n</template>\r\n\r\n<script>\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default {\r\n  \r\n  data() {\r\n    return {\r\n      loading: false,\r\n      salle: {},\r\n      id_salle: this.$route.params.id,\r\n      pastConcerts: [],\r\n      currentConcerts: [],\r\n      upcomingConcerts: [],\r\n    };\r\n  },\r\n  created() {\r\n    axios.get(`http://localhost:8080/salle/salles/${this.id_salle}/concerts`)\r\n      .then(response => {\r\n        const concerts = response.data;\r\n        const now = Date.now();\r\n\r\n        this.pastConcerts = concerts.filter(concert => new Date(concert.con_date_heure_fin) < now);\r\n        this.currentConcerts = concerts.filter(concert => new Date(concert.con_date_heure_fin) >= now && new Date(concert.con_date_heure_debut) <= now);\r\n        this.upcomingConcerts = concerts.filter(concert => new Date(concert.con_date_heure_debut) > now);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  },\r\n  mounted() {\r\n   \r\n    this.getSalleData(this.id_salle);\r\n  },\r\n  methods: {\r\n    getSalleData(id_salle) {\r\n      fetch(`http://localhost:8080/salle/${id_salle}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          this.loading = true;\r\n          this.salle = data;\r\n          const address = this.salle.sal_adresse;\r\n          this.getMapData(address);\r\n        })\r\n        .catch(error => console.error(error));\r\n    },\r\n    getMapData(address) {\r\n      const url = `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(address)}&format=json&limit=1`;\r\n      fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          const lat = data[0].lat;\r\n          const lon = data[0].lon;\r\n\r\n          const map = L.map('map').setView([lat, lon], 13);\r\n          L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors',\r\n            maxZoom: 18,\r\n          }).addTo(map);\r\n          L.marker([lat, lon]).addTo(map);\r\n        })\r\n        .catch(error => console.log(error));\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#map {\r\n  height: 400px;\r\n  width: 50%;\r\n  float: right;\r\n}\r\n#infoSalle {\r\n  float: left;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}