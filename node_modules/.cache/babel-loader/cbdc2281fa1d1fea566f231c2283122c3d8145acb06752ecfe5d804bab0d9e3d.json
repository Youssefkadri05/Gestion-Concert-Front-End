{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"about\\\"><h1 class=\\\"text-center\\\">Liste des concerts</h1><div class=\\\"card bg-secondary fw-bold text-white text-center\\\"><div class=\\\"card-body\\\">Concerts passées</div></div><div class=\\\"card bg-success fw-bold text-white text-center\\\"><div class=\\\"card-body\\\">Concerts en cours</div></div><div class=\\\"card bg-primary fw-bold text-white text-center\\\"><div class=\\\"card-body\\\">Concerts à venir</div></div></div>\", 1);\nconst _hoisted_2 = {\n  id: \"infoSalle\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, \" Nom de la salle : \" + _toDisplayString(_ctx.user.login), 1 /* TEXT */), _hoisted_3], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["id","_createElementVNode","_hoisted_1","_hoisted_2","_toDisplayString","_ctx","user","login","_hoisted_3"],"sources":["C:\\Users\\33625\\Desktop\\M1\\System d'information\\projet\\projetVueJS\\concert\\src\\components\\SalleDetails.vue"],"sourcesContent":["<template>\r\n    \r\n    <div class=\"about\">\r\n    <h1 class=\"text-center\">Liste des concerts</h1>\r\n    <div class=\"card bg-secondary fw-bold text-white text-center\">\r\n      <div class=\"card-body\">Concerts passées</div>\r\n    </div>\r\n    <div class=\"card bg-success fw-bold text-white text-center\">\r\n      <div class=\"card-body\">Concerts en cours</div>\r\n    </div>\r\n    <div class=\"card bg-primary fw-bold text-white text-center\">\r\n      <div class=\"card-body\">Concerts à venir</div>\r\n    </div>\r\n  </div>\r\n    <div id=\"infoSalle\">\r\n      Nom de la salle : {{ user.login }}\r\n    </div>\r\n    <div id=\"map\"></div>\r\n  </template>\r\n  \r\n  <script>\r\n  import L from 'leaflet';\r\n  \r\n  export default {\r\n    mounted() {\r\n      const address = \"14 rue borda, brest France\";\r\n      const url = `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(address)}&format=json&limit=1`;\r\n    \r\n    //--------------------------------------------- Informations de la salle ----------------------------\r\n      // Récupération des données de l'utilisateur\r\n    //const username = \"mojombo\"; // Remplacez par le nom d'utilisateur GitHub souhaité\r\n    //fetch(`https://api.github.com/users/${username}`)\r\n    \r\n    fetch(`https://api.github.com/users/mojombo`)\r\n      .then(response => response.json())\r\n      .then(dataSalle => {\r\n        this.loading = false;\r\n        this.user = dataSalle;\r\n      })\r\n      .catch(error => console.error(error));\r\n      //--------------------------------------------- Informations de la carte  ----------------------------\r\n      fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          const lat = data[0].lat;\r\n          const lon = data[0].lon;\r\n  \r\n          const map = L.map('map').setView([lat, lon], 13);\r\n          L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors',\r\n            maxZoom: 18,\r\n          }).addTo(map);\r\n          L.marker([lat, lon]).addTo(map);\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n    \r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  #map {\r\n    height: 400px;\r\n    width: 50%;\r\n    float: right;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;EAcSA,EAAE,EAAC;AAAW;gCAGnBC,mBAAA,CAAoB;EAAfD,EAAE,EAAC;AAAK;;;6DAfbE,UAWI,EACJD,mBAAA,CAEM,OAFNE,UAEM,EAFc,qBACA,GAAAC,gBAAA,CAAGC,IAAA,CAAAC,IAAI,CAACC,KAAK,kBAEjCC,UAAoB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}