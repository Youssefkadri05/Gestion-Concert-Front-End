{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"about\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center\"\n}, \"Liste des concerts\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card bg-primary fw-bold text-white text-center\"\n}, [/*#__PURE__*/_createCommentVNode(\" Afficher le texte \\\"Concerts à venir\\\" dans la carte \"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-body\"\n}, \"Concerts à venir\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Créer un titre pour la liste des concerts \"), _hoisted_2, _createCommentVNode(\" Créer une carte avec un texte en bleu et en gras \"), _hoisted_3, _createCommentVNode(\" Créer une liste non ordonnée \"), _createElementVNode(\"ul\", null, [_createCommentVNode(\" Faire une boucle sur le tableau upcomingConcerts et afficher le nom de chaque concert avec un lien vers sa page de détails \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.upcomingConcerts, concert => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: concert.id\n    }, [_createVNode(_component_router_link, {\n      class: \"salleLink\",\n      to: {\n        name: 'ConcertDetails',\n        params: {\n          id: concert.con_id\n        }\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(concert.con_nom), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createCommentVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","upcomingConcerts","concert","key","id","_createVNode","_component_router_link","to","name","params","con_id","con_nom"],"sources":["C:\\Users\\33625\\Desktop\\M1\\System d'information\\projet\\projetVueJS\\concert\\concert-client\\src\\components\\Concert\\ConcertListeForGroupe.vue"],"sourcesContent":["\r\n<template>\r\n  <div class=\"about\">\r\n    <!-- Créer un titre pour la liste des concerts -->\r\n    <h1 class=\"text-center\">Liste des concerts</h1>\r\n    <!-- Créer une carte avec un texte en bleu et en gras -->\r\n    <div class=\"card bg-primary fw-bold text-white text-center\">\r\n      <!-- Afficher le texte \"Concerts à venir\" dans la carte -->\r\n      <div class=\"card-body\">Concerts à venir</div>\r\n\r\n    </div>\r\n    <!-- Créer une liste non ordonnée -->\r\n    <ul>\r\n      <!-- Faire une boucle sur le tableau upcomingConcerts et afficher le nom de chaque concert avec un lien vers sa page de détails -->\r\n      <li v-for=\"concert in upcomingConcerts\" :key=\"concert.id\">\r\n      <router-link class=\"salleLink\" :to=\"{ name: 'ConcertDetails', params: { id: concert.con_id } }\">\r\n        {{ concert.con_nom }}\r\n      </router-link>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// Importer la bibliothèque axios pour faire des requêtes HTTP\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // Définir une variable pour stocker les concerts à venir\r\n      upcomingConcerts: [],\r\n      // Récupérer l'identifiant du groupe passé en paramètre dans l'URL\r\n      id_groupe: this.$route.params.id,\r\n    };\r\n  },\r\n  created() {\r\n    // Faire une requête GET pour obtenir les concerts du groupe\r\n    axios.get(`http://localhost:8080/concert/groupe/${this.id_groupe}/concert`)\r\n      .then(response => {\r\n        // Stocker les données de la réponse dans une variable\r\n        const concerts = response.data;\r\n        // Obtenir la date actuelle en millisecondes\r\n        const now = Date.now();\r\n\r\n        // Filtrer les concerts pour ne garder que ceux dont la date est supérieure à la date actuelle\r\n        this.upcomingConcerts = concerts.filter(concert => new Date(concert.con_date_heure_debut) > now);\r\n      })\r\n      .catch(error => {\r\n        // Afficher l'erreur dans la console en cas de problème\r\n        console.error(error);\r\n      });\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.salleLink {\r\n  /* Supprimer le soulignement du lien */\r\n  text-decoration-line: none;\r\n  /* Mettre la couleur du texte en noir */\r\n  color: black;\r\n  /* Mettre le texte en gras */\r\n  font-weight: bold;\r\n}\r\n</style>"],"mappings":";;EAEOA,KAAK,EAAC;AAAO;gCAEhBC,mBAAA,CAA+C;EAA3CD,KAAK,EAAC;AAAa,GAAC,oBAAkB;gCAE1CC,mBAAA,CAIM;EAJDD,KAAK,EAAC;AAAgD,I,aACzDE,mBAAA,0DAA2D,E,aAC3DD,mBAAA,CAA6C;EAAxCD,KAAK,EAAC;AAAW,GAAC,kBAAgB,E;;;;uBAN3CG,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJF,mBAAA,+CAAkD,EAClDG,UAA+C,EAC/CH,mBAAA,sDAAyD,EACzDI,UAIM,EACNJ,mBAAA,kCAAqC,EACrCD,mBAAA,CAOK,aANHC,mBAAA,gIAAmI,G,kBACnIC,mBAAA,CAIKI,SAAA,QAAAC,WAAA,CAJiBC,KAAA,CAAAC,gBAAgB,EAA3BC,OAAO;yBAAlBR,mBAAA,CAIK;MAJoCS,GAAG,EAAED,OAAO,CAACE;QACtDC,YAAA,CAEcC,sBAAA;MAFDf,KAAK,EAAC,WAAW;MAAEgB,EAAE;QAAAC,IAAA;QAAAC,MAAA;UAAAL,EAAA,EAA0CF,OAAO,CAACQ;QAAM;MAAA;;wBACxF,MAAqB,C,kCAAlBR,OAAO,CAACS,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}