{"ast":null,"code":"// Importer la bibliothèque axios pour faire des requêtes HTTP\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      // Définir une variable pour stocker les concerts à venir\n      upcomingConcerts: [],\n      // Récupérer l'identifiant du groupe passé en paramètre dans l'URL\n      id_groupe: this.$route.params.id\n    };\n  },\n  created() {\n    // Faire une requête GET pour obtenir les concerts du groupe\n    axios.get(`http://localhost:8080/concert/groupe/${this.id_groupe}/concert`).then(response => {\n      // Stocker les données de la réponse dans une variable\n      const concerts = response.data;\n      // Obtenir la date actuelle en millisecondes\n      const now = Date.now();\n\n      // Filtrer les concerts pour ne garder que ceux dont la date est supérieure à la date actuelle\n      this.upcomingConcerts = concerts.filter(concert => new Date(concert.con_date_heure_debut) > now);\n    }).catch(error => {\n      // Afficher l'erreur dans la console en cas de problème\n      console.error(error);\n    });\n  }\n};","map":{"version":3,"names":["axios","data","upcomingConcerts","id_groupe","$route","params","id","created","get","then","response","concerts","now","Date","filter","concert","con_date_heure_debut","catch","error","console"],"sources":["C:\\Users\\33625\\Desktop\\M1\\System d'information\\projet\\projetVueJS\\concert\\concert-client\\src\\components\\Concert\\ConcertListeForGroupe.vue"],"sourcesContent":["\r\n<template>\r\n  <div class=\"about\">\r\n    <!-- Créer un titre pour la liste des concerts -->\r\n    <h1 class=\"text-center\">Liste des concerts</h1>\r\n    <!-- Créer une carte avec un texte en bleu et en gras -->\r\n    <div class=\"card bg-primary fw-bold text-white text-center\">\r\n      <!-- Afficher le texte \"Concerts à venir\" dans la carte -->\r\n      <div class=\"card-body\">Concerts à venir</div>\r\n\r\n    </div>\r\n    <!-- Créer une liste non ordonnée -->\r\n    <ul>\r\n      <!-- Faire une boucle sur le tableau upcomingConcerts et afficher le nom de chaque concert avec un lien vers sa page de détails -->\r\n      <li v-for=\"concert in upcomingConcerts\" :key=\"concert.id\">\r\n      <router-link class=\"salleLink\" :to=\"{ name: 'ConcertDetails', params: { id: concert.con_id } }\">\r\n        {{ concert.con_nom }}\r\n      </router-link>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// Importer la bibliothèque axios pour faire des requêtes HTTP\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // Définir une variable pour stocker les concerts à venir\r\n      upcomingConcerts: [],\r\n      // Récupérer l'identifiant du groupe passé en paramètre dans l'URL\r\n      id_groupe: this.$route.params.id,\r\n    };\r\n  },\r\n  created() {\r\n    // Faire une requête GET pour obtenir les concerts du groupe\r\n    axios.get(`http://localhost:8080/concert/groupe/${this.id_groupe}/concert`)\r\n      .then(response => {\r\n        // Stocker les données de la réponse dans une variable\r\n        const concerts = response.data;\r\n        // Obtenir la date actuelle en millisecondes\r\n        const now = Date.now();\r\n\r\n        // Filtrer les concerts pour ne garder que ceux dont la date est supérieure à la date actuelle\r\n        this.upcomingConcerts = concerts.filter(concert => new Date(concert.con_date_heure_debut) > now);\r\n      })\r\n      .catch(error => {\r\n        // Afficher l'erreur dans la console en cas de problème\r\n        console.error(error);\r\n      });\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.salleLink {\r\n  /* Supprimer le soulignement du lien */\r\n  text-decoration-line: none;\r\n  /* Mettre la couleur du texte en noir */\r\n  color: black;\r\n  /* Mettre le texte en gras */\r\n  font-weight: bold;\r\n}\r\n</style>"],"mappings":"AAwBA;AACA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,gBAAgB,EAAE,EAAE;MACpB;MACAC,SAAS,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC;IAChC,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACAP,KAAK,CAACQ,GAAG,CAAE,wCAAuC,IAAI,CAACL,SAAU,UAAS,EACvEM,IAAI,CAACC,QAAO,IAAK;MAChB;MACA,MAAMC,QAAO,GAAID,QAAQ,CAACT,IAAI;MAC9B;MACA,MAAMW,GAAE,GAAIC,IAAI,CAACD,GAAG,EAAE;;MAEtB;MACA,IAAI,CAACV,gBAAe,GAAIS,QAAQ,CAACG,MAAM,CAACC,OAAM,IAAK,IAAIF,IAAI,CAACE,OAAO,CAACC,oBAAoB,IAAIJ,GAAG,CAAC;IAClG,CAAC,EACAK,KAAK,CAACC,KAAI,IAAK;MACd;MACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}