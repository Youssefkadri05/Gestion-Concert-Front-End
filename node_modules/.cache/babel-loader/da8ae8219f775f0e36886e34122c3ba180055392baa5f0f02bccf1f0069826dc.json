{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      // Définir une variable pour stocker les concerts à venir\n      upcomingConcerts: [],\n      // Récupérer l'id de l'artiste depuis l'URL\n      id_artiste: this.$route.params.id\n    };\n  },\n  created() {\n    // Envoyer une requête HTTP GET à l'URL de l'API avec l'id de l'artiste\n    axios.get(`http://localhost:8080/artiste/artiste/${this.id_artiste}/concerts`).then(response => {\n      // Récupérer les données des concerts\n      const concerts = response.data;\n      // Obtenir la date actuelle\n      const now = Date.now();\n\n      // Filtrer les concerts qui ont lieu après la date actuelle\n      this.upcomingConcerts = concerts.filter(concert => new Date(concert.con_date_heure_debut) > now);\n    })\n    // Afficher une erreur en cas de problème\n    .catch(error => {\n      console.error(error);\n    });\n  }\n};","map":{"version":3,"names":["axios","data","upcomingConcerts","id_artiste","$route","params","id","created","get","then","response","concerts","now","Date","filter","concert","con_date_heure_debut","catch","error","console"],"sources":["C:\\Users\\33625\\Desktop\\M1\\System d'information\\projet\\projetVueJS\\concert\\concert-client\\src\\components\\Concert\\ConcertListeForArtiste.vue"],"sourcesContent":["<template>\r\n  <div class=\"about\">\r\n    <!-- Créer un titre avec le texte \"Liste des concerts\" -->\r\n    <h1 class=\"text-center\">Liste des concerts</h1>\r\n    <!-- Créer une carte avec le texte \"Concerts à venir\" -->\r\n    <div class=\"card bg-primary fw-bold text-white text-center\">\r\n      <div class=\"card-body\">Concerts à venir</div>\r\n\r\n    </div>\r\n    <!-- Créer une liste non ordonnée -->\r\n    <ul>\r\n      <!-- Faire une boucle sur les concerts à venir et afficher leur nom avec un lien vers les détails -->\r\n      <li v-for=\"concert in upcomingConcerts\" :key=\"concert.id\">\r\n      <router-link class=\"salleLink\" :to=\"{ name: 'ConcertDetails', params: { id: concert.con_id } }\">\r\n        {{ concert.con_nom }}\r\n      </router-link>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // Définir une variable pour stocker les concerts à venir\r\n      upcomingConcerts: [],\r\n      // Récupérer l'id de l'artiste depuis l'URL\r\n      id_artiste: this.$route.params.id,\r\n    };\r\n  },\r\n  created() {\r\n    // Envoyer une requête HTTP GET à l'URL de l'API avec l'id de l'artiste\r\n    axios.get(`http://localhost:8080/artiste/artiste/${this.id_artiste}/concerts`)\r\n      .then(response => {\r\n        // Récupérer les données des concerts\r\n        const concerts = response.data;\r\n        // Obtenir la date actuelle\r\n        const now = Date.now();\r\n\r\n        // Filtrer les concerts qui ont lieu après la date actuelle\r\n        this.upcomingConcerts = concerts.filter(concert => new Date(concert.con_date_heure_debut) > now);\r\n      })\r\n      // Afficher une erreur en cas de problème\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.salleLink {\r\n  /* Définir le style du lien vers les détails du concert */\r\n  text-decoration-line: none;\r\n  color: black;\r\n  font-weight: bold;\r\n}\r\n</style>"],"mappings":"AAsBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,gBAAgB,EAAE,EAAE;MACpB;MACAC,UAAU,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC;IACjC,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACAP,KAAK,CAACQ,GAAG,CAAE,yCAAwC,IAAI,CAACL,UAAW,WAAU,EAC1EM,IAAI,CAACC,QAAO,IAAK;MAChB;MACA,MAAMC,QAAO,GAAID,QAAQ,CAACT,IAAI;MAC9B;MACA,MAAMW,GAAE,GAAIC,IAAI,CAACD,GAAG,EAAE;;MAEtB;MACA,IAAI,CAACV,gBAAe,GAAIS,QAAQ,CAACG,MAAM,CAACC,OAAM,IAAK,IAAIF,IAAI,CAACE,OAAO,CAACC,oBAAoB,IAAIJ,GAAG,CAAC;IAClG,CAAC;IACD;IAAA,CACCK,KAAK,CAACC,KAAI,IAAK;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}