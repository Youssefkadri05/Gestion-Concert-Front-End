{"ast":null,"code":"export default {\n  data() {\n    return {\n      loading: false,\n      // Définir une variable pour stocker les données du concert\n      concert: {},\n      // Récupérer l'id du concert depuis l'URL\n      id_concert: this.$route.params.id\n    };\n  },\n  mounted() {\n    // Appeler la méthode getConcertData au chargement du composant\n    this.getConcertData(this.id_concert);\n  },\n  methods: {\n    // Définir une méthode pour récupérer les données du concert depuis une API\n    getConcertData(id_concert) {\n      // Envoyer une requête HTTP GET à l'URL de l'API avec l'id du concert\n      fetch(`http://localhost:8080/concert/${id_concert}`)\n      // Convertir la réponse en JSON\n      .then(response => response.json())\n      // Stocker les données dans la variable concert\n      .then(data => {\n        this.loading = true;\n        this.concert = data;\n      })\n      // Afficher une erreur en cas de problème\n      .catch(error => console.error(error));\n    }\n  }\n};","map":{"version":3,"names":["data","loading","concert","id_concert","$route","params","id","mounted","getConcertData","methods","fetch","then","response","json","catch","error","console"],"sources":["C:\\Users\\33625\\Desktop\\M1\\System d'information\\projet\\projetVueJS\\concert\\concert-client\\src\\components\\Concert\\ConcertDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"about\">\r\n  <!-- Créer un titre avec le texte \"Informations du concert\" -->\r\n  <h1 class=\"text-center\">Informations du concert</h1>\r\n  <div>\r\n    <!-- Afficher les données du concert avec des balises span -->\r\n    <span class=\"display-6 fw-bold fs-5\">Nom du concert           :  </span> {{ concert.con_nom }} <br/>\r\n    <span class=\"display-6 fw-bold fs-5\">Description              :  </span> {{ concert.con_description }} <br/>\r\n    <span class=\"display-6 fw-bold fs-5\">date et heure de début   :  </span> {{ concert.con_date_heure_debut }} <br/>\r\n    <span class=\"display-6 fw-bold fs-5\">date et heure de fin     :  </span> {{ concert.con_date_heure_fin }} <br/>\r\n  </div>\r\n  \r\n</div>\r\n<!-- Créer un lien pour acheter un ticket avec le paramètre id du concert -->\r\n<router-link class=\"btn btn-primary\" :to=\"'/Tickets/Acheter/' + concert.soi_id\">Achter un ticket</router-link>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      // Définir une variable pour stocker les données du concert\r\n      concert: {},\r\n      // Récupérer l'id du concert depuis l'URL\r\n      id_concert: this.$route.params.id\r\n    };\r\n  },\r\n  mounted() {\r\n\r\n   \r\n    // Appeler la méthode getConcertData au chargement du composant\r\n    this.getConcertData(this.id_concert);\r\n  },\r\n  methods: {\r\n    // Définir une méthode pour récupérer les données du concert depuis une API\r\n    getConcertData(id_concert) {\r\n      // Envoyer une requête HTTP GET à l'URL de l'API avec l'id du concert\r\n      fetch(`http://localhost:8080/concert/${id_concert}`)\r\n        // Convertir la réponse en JSON\r\n        .then(response => response.json())\r\n        // Stocker les données dans la variable concert\r\n        .then(data => {\r\n          this.loading = true;\r\n          this.concert = data;\r\n        })\r\n        // Afficher une erreur en cas de problème\r\n        .catch(error => console.error(error));\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"AAmBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,KAAK;MACd;MACAC,OAAO,EAAE,CAAC,CAAC;MACX;MACAC,UAAU,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC;IACjC,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IAGR;IACA,IAAI,CAACC,cAAc,CAAC,IAAI,CAACL,UAAU,CAAC;EACtC,CAAC;EACDM,OAAO,EAAE;IACP;IACAD,cAAcA,CAACL,UAAU,EAAE;MACzB;MACAO,KAAK,CAAE,iCAAgCP,UAAW,EAAC;MACjD;MAAA,CACCQ,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,EAAE;MACjC;MAAA,CACCF,IAAI,CAACX,IAAG,IAAK;QACZ,IAAI,CAACC,OAAM,GAAI,IAAI;QACnB,IAAI,CAACC,OAAM,GAAIF,IAAI;MACrB,CAAC;MACD;MAAA,CACCc,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;IACzC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}