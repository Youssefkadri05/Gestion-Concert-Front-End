{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"list-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, user => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      type: \"button\",\n      class: \"list-group-item list-group-item-action\",\n      key: user.id\n    }, _toDisplayString(user.login), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","users","user","type","key","id","login"],"sources":["C:\\Users\\33625\\Desktop\\M1\\System d'information\\projet\\projetVueJS\\concert\\src\\views\\ArtisteGestion.vue"],"sourcesContent":["<template>\r\n    \r\n    \r\n    \r\n    \r\n    <div class=\"list-group\">\r\n  <button type=\"button\" class=\"list-group-item list-group-item-action\" v-for=\"user in users\" :key=\"user.id\">{{ user.login }}</button>\r\n</div>\r\n    \r\n    \r\n   \r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        users: []\r\n      }\r\n    },\r\n    mounted() {\r\n      // Appel de l'API pour récupérer la liste des utilisateurs de GitHub\r\n      fetch('https://api.github.com/users')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          // Stockage des données dans le modèle du composant\r\n          this.users = data;\r\n        })\r\n    }\r\n  }\r\n  </script>\r\n  "],"mappings":";;EAKSA,KAAK,EAAC;AAAY;;uBAAvBC,mBAAA,CAEE,OAFFC,UAEE,I,kBADJD,mBAAA,CAAmIE,SAAA,QAAAC,WAAA,CAA/CC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAhFN,mBAAA,CAAmI;MAA3HO,IAAI,EAAC,QAAQ;MAACR,KAAK,EAAC,wCAAwC;MAAwBS,GAAG,EAAEF,IAAI,CAACG;wBAAOH,IAAI,CAACI,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}